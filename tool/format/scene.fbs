//-----------------------------------------------------------------------------
// Desc : Scene Binary Format.
// Copyright(c) Project Asura. All right reserved.
//-----------------------------------------------------------------------------
namespace r3d;


struct Vector2
{
    x:float;
    y:float;
}

struct Vector3
{
    x:float;
    y:float;
    z:float;
}

struct Vector4
{
    x:float;
    y:float;
    z:float;
    w:float;
}

struct Matrix3x4
{
    row0:Vector4;
    row1:Vector4;
    row2:Vector4;
}

struct ResVertex
{
    Position:Vector3;
    Normal:Vector3;
    Tangent:Vector3;
    TexCoord:Vector2;
}

table SubResource
{
    Width:uint;
    Height:uint;
    MipIndex:uint;
    Pitch:uint;
    SlicePitch:uint;
    Pixels:[ubyte];
}

table ResTexture
{
    Dimension:uint;
    Width:uint;
    Height:uint;
    Depth:uint;
    Format:uint;
    MipLevels:uint;
    SurfaceCount:uint;
    Option:uint;
    Resources:[SubResource];
}

struct ResMaterial
{
    BaseColor:uint;
    Normal:uint;
    Orm:uint;
    Emissive:uint;
    IntIor:float;
    ExtIor:float;
    UvScale:Vector2;
}

table ResMesh
{
    VertexCount:uint;
    IndexCount:uint;
    Vertices:[ResVertex];
    Indices:[uint];
}

struct ResInstance
{
    MeshIndex:uint;
    MaterialIndex:uint;
    Transform:Matrix3x4;
}

struct ResLight
{
    Type:uint;
    Color:Vector3;
    Position:Vector3;
    Radius:float;
}

table ResScene
{
    MeshCount:uint;
    InstanceCount:uint;
    TextureCount:uint;
    MaterialCount:uint;
    LightCount:uint;
    IblTexture:ResTexture;
    Meshes:[ResMesh];
    Instances:[ResInstance];
    Textures:[ResTexture];
    Materials:[ResMaterial];
    Lights:[ResLight];
}

root_type ResScene;
